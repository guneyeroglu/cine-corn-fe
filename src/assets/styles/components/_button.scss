@use '../utils/variables' as colors;

$colors: primary, secondary, success, error, info, warning;

@mixin is-icon() {
  padding: 10px;
  border-radius: 50%;
}

@mixin button-contained($type) {
  font-size: 1rem;
  font-weight: 400;
  color: map-get(colors.$colors, #{$type}-50);
  background-color: map-get(colors.$colors, #{$type}-500);
  outline: none;
  border: none;
  border-radius: 10px;
  padding: 10px 16px;
  cursor: pointer;
  transition: all 0.35s ease;

  &:hover {
    background-color: map-get(colors.$colors, #{$type}-600);
  }

  &[icon] {
    @include is-icon();
  }
}

@mixin button-outlined($type) {
  font-size: 1rem;
  font-weight: 400;
  color: map-get(colors.$colors, #{$type}-50);
  background-color: transparent;
  outline: none;
  border: 1px solid map-get(colors.$colors, #{$type}-600);
  border-radius: 10px;
  padding: 9px 15px;
  cursor: pointer;
  transition: all 0.35s ease;

  &:hover {
    border-color: map-get(colors.$colors, #{$type}-500);
  }

  &[icon] {
    @include is-icon();
  }
}

@mixin button-text($type) {
  font-size: 1rem;
  font-weight: 400;
  color: map-get(colors.$colors, #{$type}-50);
  background-color: transparent;
  outline: none;
  border: none;
  border-radius: 10px;
  padding: 10px 16px;
  cursor: pointer;
  transition: all 0.35s ease;

  &:hover {
    background-color: map-get(colors.$colors, #{$type}-500);
  }

  &[icon] {
    @include is-icon();
  }
}

@each $color in $colors {
  [button-contained-#{$color}] {
    @include button-contained($color);
  }
}

@each $color in $colors {
  [button-outlined-#{$color}] {
    @include button-outlined($color);
  }
}

@each $color in $colors {
  [button-text-#{$color}] {
    @include button-text($color);
  }
}
